name: "Cross-compile and test"
on:
  pull_request:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "include/**"
      - "externals/**"
      - "build.zig"

jobs:
  build:
    name: Cross-compile build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        run: ci/all-build.sh x86_64-linux
      
      - name: x86_64-linux
        uses: actions/cache@v3
        with:
          path: build/x86_64-linux/
          key: x86_64-linux-cache-${{ github.sha }}
      
      - name: x86_64-macos
        uses: actions/cache@v3
        with:
          path: build/x86_64-macos/
          key: x86_64-macos-cache-${{ github.sha }}
      
      - name: x86_64-windows
        uses: actions/cache@v3
        with:
          path: build/x86_64-windows/
          key: x86_64-windows-cache-${{ github.sha }}

  test-x86_64-macos:
    name: Test x86_64-macos
    runs-on: macos-13
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: "ci/x86_64-macos-test.sh"
      - name: Download build
        uses: actions/cache@v3
        with:
          path: build/x86_64-macos/
          key: x86_64-macos-cache-${{ github.sha }}
      - name: Test
        run: sh ci/x86_64-macos-test.sh

  test-x86_64-linux:
    name: Test x86_64-linux
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: "ci/x86_64-linux-test.sh"
      - name: Download build
        uses: actions/cache@v3
        with:
          path: build/x86_64-linux/
          key: x86_64-linux-cache-${{ github.sha }}
      - name: Test
        run: sh ci/x86_64-linux-test.sh

  test-x86_64-windows:
    name: Test x86_64-windows
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: "ci/x86_64-windows-test.ps1"
      - name: Download build
        uses: actions/cache@v3
        with:
          path: build/x86_64-windows/
          key: x86_64-windows-cache-${{ github.sha }}
          enableCrossOsArchive: true
      - name: Test
        run: ci/x86_64-windows-test.ps1

  cleanup:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [test-x86_64-linux, test-x86_64-macos, test-x86_64-windows]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          
          gh actions-cache delete x86_64-linux-cache-${{ github.sha }} -R $REPO --confirm
          gh actions-cache delete x86_64-macos-cache-${{ github.sha }} -R $REPO  --confirm
          gh actions-cache delete x86_64-windows-cache-${{ github.sha }} -R $REPO --confirm

          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
